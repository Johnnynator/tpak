name: CI

on: [ push,  pull_request ]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            artifact_name: tpak
            asset_name: tpak_linux
          - os: macos-latest
            artifact_name: tpak
            asset_name: tpak_macos
          - os: windows-latest
            artifact_name: tpak.exe
            asset_name: tpak.exe

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2
    - uses: actions/setup-python@v1
    - uses: BSFishy/meson-build@v1.0.1
      with:
        action: build
    - name: Move artifacts
      shell: bash
      run: |
        mkdir -p artifacts
        if [ "${{ matrix.os }}" = "windows-latest" ]; then
          cp build/tpak.exe artifacts
        else
          cp build/tpak artifacts
        fi
    - uses: actions/upload-artifact@v1.0.0
      with:
        name: ${{ matrix.os }}
        path: artifacts
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: continous
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: true
    - name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: build/${{ matrix.artifact_name }}
        asset_name: ${{ matrix.asset_name }}
        asset_content_type: application/octet-stream
